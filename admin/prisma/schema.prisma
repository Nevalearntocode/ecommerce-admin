// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  name           String
  email          String    @unique
  emailVerified  DateTime?
  image          String
  hashedPassword String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  store Store[]

  accounts Account[]
}

enum StoreType {
  CLOTHING
  TECHNOLOGY
}

enum Size {
  XS
  S
  M
  L
  XL
  XXL
}

model Store {
  id         Int         @id @default(autoincrement())
  slug       String
  name       String
  type       StoreType   @default(CLOTHING)
  userId     Int
  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  categories Category[]
  billboards Billboard[]

  @@unique([userId, name])
  @@unique([userId, slug])
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  storeId     Int
  store       Store     @relation(fields: [storeId], references: [id], onDelete: Cascade)
  billboardId Int       @unique
  billboards  Billboard @relation(fields: [billboardId], references: [id])
  product     Product[]
}

model Billboard {
  id       Int        @id @default(autoincrement())
  name     String
  image    String
  category Category[]
  storeId  Int
  store    Store      @relation(fields: [storeId], references: [id], onDelete: Cascade)
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int
  images      String[]
  categoryId  Int
  category    Category    @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  // Clothing attributes
  clothing    Clothing?
  technology  Technology?
}

// Define the Clothing model (nested within Product)
model Clothing {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int     @unique
  size      Size?
  color     String?
}

// Define the Technology model (nested within Product)
model Technology {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int     @unique
  model     String?
  brand     String?
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}
